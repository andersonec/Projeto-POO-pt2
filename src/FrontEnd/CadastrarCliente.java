package FrontEnd;
import BackEnd.*;
import java.util.*;
import java.io.*;
import javax.swing.JOptionPane;
/**
 *
 * @author andersonsantos
 */
public class CadastrarCliente extends javax.swing.JInternalFrame {
    File clientesCad = new File("./src/Arquivos/clientesCadastrados.txt");
    ManipularArquivo cadastroObj = new ManipularArquivo();
    ArrayList<Cliente> clienteL = new ArrayList();
    Cliente clienteC = new Cliente();
    Random rand = new Random();
    /**
     * Creates new form CadastrarCliente
     */
    public CadastrarCliente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        voltarC = new javax.swing.JButton();
        cadastrarC = new javax.swing.JButton();
        nomeC = new javax.swing.JTextField();
        cpfC = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        sobrenomeC = new javax.swing.JTextField();
        valNome = new javax.swing.JCheckBox();
        valSobrenome = new javax.swing.JCheckBox();
        valCpf = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(894, 598));

        jLabel1.setFont(new java.awt.Font("Century Schoolbook L", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(95, 94, 94));
        jLabel1.setText("CADASTRO DE CLIENTE");

        jLabel2.setFont(new java.awt.Font("Century Schoolbook L", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(95, 94, 94));
        jLabel2.setText("NOME:");

        jLabel3.setFont(new java.awt.Font("Century Schoolbook L", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(95, 94, 94));
        jLabel3.setText("CPF:");

        voltarC.setFont(new java.awt.Font("Century Schoolbook L", 1, 14)); // NOI18N
        voltarC.setForeground(new java.awt.Color(95, 94, 94));
        voltarC.setText("VOLTAR");
        voltarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarCActionPerformed(evt);
            }
        });

        cadastrarC.setFont(new java.awt.Font("Century Schoolbook L", 1, 14)); // NOI18N
        cadastrarC.setForeground(new java.awt.Color(95, 94, 94));
        cadastrarC.setText("CADASTRAR");
        cadastrarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarCActionPerformed(evt);
            }
        });

        nomeC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeCActionPerformed(evt);
            }
        });

        cpfC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpfCActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Century Schoolbook L", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(95, 94, 94));
        jLabel4.setText("SOBRENOME:");

        sobrenomeC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sobrenomeCActionPerformed(evt);
            }
        });

        valNome.setEnabled(false);
        valNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valNomeActionPerformed(evt);
            }
        });

        valSobrenome.setEnabled(false);
        valSobrenome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valSobrenomeActionPerformed(evt);
            }
        });

        valCpf.setEnabled(false);
        valCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valCpfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(valCpf)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cpfC))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(valSobrenome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sobrenomeC))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(valNome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nomeC))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(voltarC)
                        .addGap(66, 66, 66)
                        .addComponent(cadastrarC)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(valSobrenome)
                    .addComponent(sobrenomeC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cpfC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(valCpf))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cadastrarC)
                            .addComponent(voltarC))
                        .addGap(42, 42, 42))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void valCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valCpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valCpfActionPerformed

    private void valSobrenomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valSobrenomeActionPerformed
        // TODO add your handling code here:
        valSobrenome.setSelected(false);
    }//GEN-LAST:event_valSobrenomeActionPerformed

    private void valNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valNomeActionPerformed

    private void sobrenomeCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sobrenomeCActionPerformed
        // TODO add your handling code here:
        int numNome = sobrenomeC.getText().length();
        char[] verificaNome = sobrenomeC.getText().toCharArray();
        boolean ver = true;
        for(int i = 0; i < verificaNome.length; i++){
            if(!Character.isLetter(verificaNome[i])){
                ver = false;
            }
        }
        if(numNome <= 2){
            JOptionPane.showMessageDialog(null, "Sobrenome inválido, por favor, digite novamente!");
        }
        else if(ver == false){
            JOptionPane.showMessageDialog(null, "O sobrenome não pode conter numeros ou caracteres especiais, por favor, digite novamente!");
        }
        else{
            valSobrenome.setSelected(true);
            clienteC.setSobrenome(sobrenomeC.getText());
        }
    }//GEN-LAST:event_sobrenomeCActionPerformed

    private void cpfCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpfCActionPerformed
        // TODO add your handling code here:
        //ValidaCPF validar = new ValidaCPF();
        String numCpf = cpfC.getText();
        if(ValidaCPF.isCPF(numCpf)){
            clienteC.setCpf(ValidaCPF.imprimeCPF(numCpf));
            valCpf.setSelected(true);
        }
        else{
            valCpf.setSelected(false);
            JOptionPane.showMessageDialog(null, "Numero de CPF inválido, digite novamente!");
        }
        
    }//GEN-LAST:event_cpfCActionPerformed

    private void cadastrarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarCActionPerformed
        // TODO add your handling code here:
        if(clienteC.getNome() == null){
            JOptionPane.showMessageDialog(null, "Erro de Nome, por favor, confira.");
        }
        else if(clienteC.getSobrenome() == null){
            JOptionPane.showMessageDialog(null, "Erro de Sobrenome, por favor, confira.");
        }
        else if(clienteC.getCpf() == null){
            JOptionPane.showMessageDialog(null, "Erro de CPF, por favor, confira.");
        }
        else{
            String objetoC = clienteC.getCodigo() + 
                            "\nNome: " + clienteC.getNome() + 
                            " " + clienteC.getSobrenome() + 
                            "\nCPF: " + clienteC.getCpf();
            clienteL.add(clienteC);
            try{
                /*FileOutputStream clientesObj = new FileOutputStream("./src/Arquivos/clientesObj.ser");
                cadastroObj.gravaObj(clientesObj, clienteC);*/
                
                cadastroObj.escreverArquivo(clientesCad, objetoC);
                JOptionPane.showMessageDialog(null, "Cadastrado com sucesso!");
                dispose();
            }catch(IOException except){
                except.printStackTrace();
            }
        }
    }//GEN-LAST:event_cadastrarCActionPerformed

    private void nomeCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeCActionPerformed
        // TODO add your handling code here:
        clienteC.setCodigo(rand.nextInt(9999));
        int numNome = nomeC.getText().length();
        char[] verificaNome = nomeC.getText().toCharArray();
        boolean ver = true;
        for(int i = 0; i < verificaNome.length; i++){
            if(!Character.isLetter(verificaNome[i])){
                ver = false;
            }
        }
        if(numNome < 2){
            JOptionPane.showMessageDialog(null, "Nome inválido, por favor, digite novamente!");
        }
        else if(ver == false){
            JOptionPane.showMessageDialog(null, "O nome não pode conter numeros ou caracteres especiais, por favor, digite novamente!");
        }
        else{
            valNome.setSelected(true);
            clienteC.setNome(nomeC.getText());
        }
    }//GEN-LAST:event_nomeCActionPerformed

    private void voltarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarCActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_voltarCActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastrarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastrarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastrarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastrarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastrarCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cadastrarC;
    private javax.swing.JTextField cpfC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField nomeC;
    private javax.swing.JTextField sobrenomeC;
    private javax.swing.JCheckBox valCpf;
    private javax.swing.JCheckBox valNome;
    private javax.swing.JCheckBox valSobrenome;
    private javax.swing.JButton voltarC;
    // End of variables declaration//GEN-END:variables
}
